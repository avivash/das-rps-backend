// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Game {
  uid                  String        @id
  stakes               String        @default("")
  commit1              String
  commit2              String
  player1Object        Player        @relation("player1Relation", fields: [player1], references: [address])
  player2Object        Player        @relation("player2Relation", fields: [player2], references: [address])
  player1              String
  player2              String
  choice1              Int
  choice2              Int
  salt1                String
  salt2                String
  eloChange1           Int           @default(0)
  eloChange2           Int           @default(0)
  relevantAttestations Attestation[]
  declined             Boolean       @default(false)
  updatedAt            Int           @default(0)
  link                 Link          @relation(fields: [player1, player2], references: [player1, player2])
  abandoned            Boolean       @default(false)
  finalized            Boolean       @default(false)
}

model Attestation {
  uid              String  @id
  data             String
  recipient        String
  attester         String
  schemaId         String
  isOffchain       Boolean @default(true)
  refUID           String
  signature        String
  gameUID          String
  relevantTo       Game    @relation(fields: [gameUID], references: [uid])
  packageObjString String
  onChainTimestamp Int     @default(0)
}

model WhitelistAttestation {
  uid              String  @id
  type             String
  isOffchain       Boolean @default(true)
  chain            String  @default("mainnet")
  packageObjString String
  recipient        String
  recipientObject  Player  @relation(fields: [recipient], references: [address])
}

model Player {
  address               String                 @id
  gamesPlayedAsPlayer1  Game[]                 @relation("player1Relation")
  gamesPlayedAsPlayer2  Game[]                 @relation("player2Relation")
  elo                   Int                    @default(1000)
  linksAsPlayer1        Link[]                 @relation("player1Links")
  linksAsPlayer2        Link[]                 @relation("player2Links")
  whiteListAttestations WhitelistAttestation[]
  whiteListTimestamp    Int                    @default(0)
}

model Link {
  player1Object   Player  @relation("player1Links", fields: [player1], references: [address])
  player2Object   Player  @relation("player2Links", fields: [player2], references: [address])
  player1         String
  player2         String
  gamesPlayed     Game[]
  opposite        Link    @relation("opposite", fields: [player1, player2], references: [player2, player1])
  oppositeReverse Link?   @relation("opposite")
  default         Boolean

  @@id([player1, player2])
}
